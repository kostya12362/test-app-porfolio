[tool.poetry]
name = "django-fastapi"
version = "0.1.0"
description = "Test app for k1core"
authors = ["kostya12362 <rota199804@gmail.com>"]
packages = [{include = "*", from="src"}]


[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.115.5"
uvicorn = "^0.30.6"
pydantic = {version = "2.8.2", extras = ["email"]}
pydantic-settings = "^2.5.2"
loguru = "^0.7.2"
django = "^5.1.6"
dj-database-url = "^2.3.0"
psycopg = { version = "^3.2.4", extras = ["binary"] }
pyjwt = "^2.10.1"
faststream = {extras = ["rabbit"], version = "^0.5.37"}
apscheduler = "^3.11.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-asyncio = "0.17.0"
httpx = "^0.27.2"
black = "~=23.1"
isort = "~=5.12"
ruff = "^0.6.8"
mypy = "^1.11.2"
pytest-cov = "^6.0.0"
gevent = "^24.11.1"
django-stubs = "^5.1.3"


[tool.ruff.lint]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F"]
ignore = ["E203"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []

[tool.ruff]
# Exclude a variety of commonly ignored directories.
line-length = 88
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".mypy_cache",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "__pycache_",
    "_build",
    "buck-out",
    "build",
    "dist",
    "venv",
    "Makefile",
    "migrations",
    "src/server/settings/base.py",
]

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 79
skip = '.venv,venv,env,anomaly_detector'
src_paths = ["src"]

[tool.black]
target-version = ['py312']
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | venv
    | _build
    | buck-out
    | build
    | dist
    | migrations
  )/
                     # the root of the project
)
'''
# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.mypy]
plugins = [
    "pydantic.mypy",
    "mypy_django_plugin.main",
]
python_version = '3.12'
strict_optional = true
ignore_missing_imports = true
follow_imports = "normal"
check_untyped_defs = true
show_column_numbers = true

# Add the 'src' directory to the module search path
mypy_path = ['src']

# Specify directories for checking
files = [
    'src',
    'tests',
]
# Exclude specific directories
exclude = [
    "migrations",
    "simulator",
    "anomaly_detector",
    "estimator",
]

# Suppressing Type Import Errors

# Add the correct `[tool.django-stubs]` section
[tool.django-stubs]
django_settings_module = "server.settings"
ignore_missing_settings = true
strict_settings = false

[[tool.mypy.overrides]]
module = [
    "websockets.exceptions",
]
ignore_missing_imports = true



[tool.pytest.ini_options]
pythonpath = [
    ".", "src",
]
addopts = '-s -v --cache-clear --log-disable=httpx --log-disable=asyncio --log-disable=requests --log-disable=urllib3'
python_functions = 'test_* *_test'
asyncio_mode = "auto"
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s %(levelname)s %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"


[tool.coverage.run]
concurrency = ["gevent"]

omit = [
    "*/conftest.py",
    "*/test_*.py",
    "*/migrations/",
    "*/src/core/*",
]

[tool.coverage.html]
directory = "./coverage_html_report"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
